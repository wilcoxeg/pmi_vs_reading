)
ggsave("./images/results_agg_all_langs.pdf", device = "pdf", width = 3.5, height = 4.8)
# Merge the dataframes
dll_xlang_surp_df %>%
rename(target = comp) %>%
mutate(sig = case_when( ptest_pval >= 0.05 ~ " ",
ptest_pval < 0.05 & ptest_pval >= 0.01  ~ "*",
ptest_pval < 0.01 & ptest_pval >= 0.001  ~ "**",
ptest_pval < 0.001  ~ "***")) %>%
mutate(psychometric = case_when(psychometric == "firstfix_rt" ~ "First Fixation",
psychometric == "gaze_rt" ~ "Gaze Duration",
psychometric == "total_rt" ~ "Total Fixation")) %>%
mutate(model = case_when(model == "mgpt_lc" ~ "mGPT",
model == "monot_all" ~ "monoT")) %>%
mutate(model = factor(model, levels = c("mGPT", "monoT"))) %>%
mutate(target = factor(target, levels = c("freq", "surp", "pmi", "osurp", "surp+freq", "pmi+freq", "osurp+freq"), labels = c("frequency", "surprisal", "pmi", "orthogonalized\nsurprisal/pmi", "surprisal & freq", "pmi & freq", "orthogonalized\nsurprisal/pmi & freq"))) %>%
ggplot(aes(x = target, y = mean, color = lang)) +
#scale_x_discrete(labels =c("freq", "surp", "pmi", "orthogonalized\nsurp/pmi", "surp+freq", "pmi+freq", "orthogonalized\nsurp/pmi+freq")) +
geom_hline(yintercept=0, color="black", linetype="dashed", alpha =0.5) +
#geom_point(position = position_dodge(width = 0.1), size = 2) +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.1, position = position_dodge(width = 0.5 ), alpha=0.5) +
geom_label(aes(label=lang, group=lang), size=2.5, position = position_dodge(width = 0.5), label.padding=unit(0.5, "mm")) +
#geom_text_repel(aes(label=lang, group=target), size=3, label.padding=unit(0.7, "mm"), min.segment.length = unit(0, 'lines')) +
#geom_text(aes(y = 0.08, label = sig), size = 3, show.legend = FALSE) +
ylab("Delta Log Liklihood \n (average  per word)") +
xlab("") +
facet_grid(.~target, scales="free", space = "free") +
labs(color = "") +
guides(color=guide_legend(ncol=2)) +
#scale_x_discrete(labels = c(bquote(w[t-2]), bquote(w[t-1]), bquote(w[t]))) +
#scale_color_manual(values = c("#a1dab4", "#41b6c4", "#225ea8")) +
#ggtitle("Contribution of Surprisal to ΔLL") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(family="serif"),
legend.position = "none",
axis.title.x = element_blank(),
panel.spacing = unit(0.1, "lines"),
axis.text.x = element_text(angle = 45, hjust = 1)#,
#panel.border = element_rect(color = "grey", fill =  NA, size = 0.5)
)
ggsave("./images/results_agg_all_langs.pdf", device = "pdf", width = 3.5, height = 4.8)
# Merge the dataframes
dll_xlang_surp_df %>%
rename(target = comp) %>%
mutate(sig = case_when( ptest_pval >= 0.05 ~ " ",
ptest_pval < 0.05 & ptest_pval >= 0.01  ~ "*",
ptest_pval < 0.01 & ptest_pval >= 0.001  ~ "**",
ptest_pval < 0.001  ~ "***")) %>%
mutate(psychometric = case_when(psychometric == "firstfix_rt" ~ "First Fixation",
psychometric == "gaze_rt" ~ "Gaze Duration",
psychometric == "total_rt" ~ "Total Fixation")) %>%
mutate(model = case_when(model == "mgpt_lc" ~ "mGPT",
model == "monot_all" ~ "monoT")) %>%
mutate(model = factor(model, levels = c("mGPT", "monoT"))) %>%
mutate(target = factor(target, levels = c("freq", "surp", "pmi", "osurp", "surp+freq", "pmi+freq", "osurp+freq"), labels = c("frequency", "surprisal", "pmi", "orthogonalized\nsurprisal/pmi", "surprisal & freq", "pmi & freq", "orthogonalized\nsurprisal/pmi & freq"))) %>%
ggplot(aes(x = target, y = mean, color = lang)) +
#scale_x_discrete(labels =c("freq", "surp", "pmi", "orthogonalized\nsurp/pmi", "surp+freq", "pmi+freq", "orthogonalized\nsurp/pmi+freq")) +
geom_hline(yintercept=0, color="black", linetype="dashed", alpha =0.5) +
#geom_point(position = position_dodge(width = 0.1), size = 2) +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.1, position = position_dodge(width = 0.5 ), alpha=0.5) +
geom_label(aes(label=lang, group=lang), size=2.5, position = position_dodge(width = 0.5), label.padding=unit(0.5, "mm")) +
#geom_text_repel(aes(label=lang, group=target), size=3, label.padding=unit(0.7, "mm"), min.segment.length = unit(0, 'lines')) +
#geom_text(aes(y = 0.08, label = sig), size = 3, show.legend = FALSE) +
ylab("Delta Log Liklihood \n (average  per word)") +
xlab("") +
facet_grid(.~target, scales="free", space = "free") +
labs(color = "") +
guides(color=guide_legend(ncol=2)) +
#scale_x_discrete(labels = c(bquote(w[t-2]), bquote(w[t-1]), bquote(w[t]))) +
#scale_color_manual(values = c("#a1dab4", "#41b6c4", "#225ea8")) +
#ggtitle("Contribution of Surprisal to ΔLL") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(family="serif"),
legend.position = "none",
axis.title.x = element_blank(),
panel.spacing = unit(0, "lines"),
axis.text.x = element_text(angle = 45, hjust = 1)#,
#panel.border = element_rect(color = "grey", fill =  NA, size = 0.5)
)
ggsave("./images/results_agg_all_langs.pdf", device = "pdf", width = 3.5, height = 4.8)
# Merge the dataframes
dll_xlang_surp_df %>%
rename(target = comp) %>%
mutate(sig = case_when( ptest_pval >= 0.05 ~ " ",
ptest_pval < 0.05 & ptest_pval >= 0.01  ~ "*",
ptest_pval < 0.01 & ptest_pval >= 0.001  ~ "**",
ptest_pval < 0.001  ~ "***")) %>%
mutate(psychometric = case_when(psychometric == "firstfix_rt" ~ "First Fixation",
psychometric == "gaze_rt" ~ "Gaze Duration",
psychometric == "total_rt" ~ "Total Fixation")) %>%
mutate(model = case_when(model == "mgpt_lc" ~ "mGPT",
model == "monot_all" ~ "monoT")) %>%
mutate(model = factor(model, levels = c("mGPT", "monoT"))) %>%
mutate(target = factor(target, levels = c("freq", "surp", "pmi", "osurp", "surp+freq", "pmi+freq", "osurp+freq"), labels = c("frequency", "surprisal", "pmi", "orthogonalized\nsurprisal/pmi", "surprisal & freq", "pmi & freq", "orthogonalized\nsurprisal/pmi & freq"))) %>%
ggplot(aes(x = target, y = mean, color = lang)) +
#scale_x_discrete(labels =c("freq", "surp", "pmi", "orthogonalized\nsurp/pmi", "surp+freq", "pmi+freq", "orthogonalized\nsurp/pmi+freq")) +
geom_hline(yintercept=0, color="black", linetype="dashed", alpha =0.5) +
#geom_point(position = position_dodge(width = 0.1), size = 2) +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.1, position = position_dodge(width = 0.5 ), alpha=0.5) +
geom_label(aes(label=lang, group=lang), size=2.5, position = position_dodge(width = 0.5), label.padding=unit(0.5, "mm")) +
#geom_text_repel(aes(label=lang, group=target), size=3, label.padding=unit(0.7, "mm"), min.segment.length = unit(0, 'lines')) +
#geom_text(aes(y = 0.08, label = sig), size = 3, show.legend = FALSE) +
ylab("Delta Log Liklihood \n (average  per word)") +
xlab("") +
facet_grid(.~target, scales="free", space = "free") +
labs(color = "") +
guides(color=guide_legend(ncol=2)) +
#scale_x_discrete(labels = c(bquote(w[t-2]), bquote(w[t-1]), bquote(w[t]))) +
#scale_color_manual(values = c("#a1dab4", "#41b6c4", "#225ea8")) +
#ggtitle("Contribution of Surprisal to ΔLL") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(family="serif"),
legend.position = "none",
axis.title.x = element_blank(),
panel.spacing = unit(0.1, "lines"),
axis.text.x = element_text(angle = 45, hjust = 1)#,
#panel.border = element_rect(color = "grey", fill =  NA, size = 0.5)
)
ggsave("./images/results_agg_all_langs.pdf", device = "pdf", width = 3.5, height = 4.8)
# Merge the dataframes
dll_xlang_surp_df %>%
rename(target = comp) %>%
mutate(sig = case_when( ptest_pval >= 0.05 ~ " ",
ptest_pval < 0.05 & ptest_pval >= 0.01  ~ "*",
ptest_pval < 0.01 & ptest_pval >= 0.001  ~ "**",
ptest_pval < 0.001  ~ "***")) %>%
mutate(psychometric = case_when(psychometric == "firstfix_rt" ~ "First Fixation",
psychometric == "gaze_rt" ~ "Gaze Duration",
psychometric == "total_rt" ~ "Total Fixation")) %>%
mutate(model = case_when(model == "mgpt_lc" ~ "mGPT",
model == "monot_all" ~ "monoT")) %>%
mutate(model = factor(model, levels = c("mGPT", "monoT"))) %>%
mutate(target = factor(target, levels = c("freq", "surp", "pmi", "osurp", "surp+freq", "pmi+freq", "osurp+freq"), labels = c("frequency", "surprisal", "pmi", "orthogonalized\nsurprisal/pmi", "surprisal & freq", "pmi & freq", "orthogonalized\nsurprisal/pmi & freq"))) %>%
ggplot(aes(x = target, y = mean, color = lang)) +
#scale_x_discrete(labels =c("freq", "surp", "pmi", "orthogonalized\nsurp/pmi", "surp+freq", "pmi+freq", "orthogonalized\nsurp/pmi+freq")) +
geom_hline(yintercept=0, color="black", linetype="dashed", alpha =0.5) +
#geom_point(position = position_dodge(width = 0.1), size = 2) +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.1, position = position_dodge(width = 0.5 ), alpha=0.8) +
geom_label(aes(label=lang, group=lang), size=2.5, position = position_dodge(width = 0.8), label.padding=unit(0.5, "mm")) +
#geom_text_repel(aes(label=lang, group=target), size=3, label.padding=unit(0.7, "mm"), min.segment.length = unit(0, 'lines')) +
#geom_text(aes(y = 0.08, label = sig), size = 3, show.legend = FALSE) +
ylab("Delta Log Liklihood \n (average  per word)") +
xlab("") +
facet_grid(.~target, scales="free", space = "free") +
labs(color = "") +
guides(color=guide_legend(ncol=2)) +
#scale_x_discrete(labels = c(bquote(w[t-2]), bquote(w[t-1]), bquote(w[t]))) +
#scale_color_manual(values = c("#a1dab4", "#41b6c4", "#225ea8")) +
#ggtitle("Contribution of Surprisal to ΔLL") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(family="serif"),
legend.position = "none",
axis.title.x = element_blank(),
panel.spacing = unit(0.1, "lines"),
axis.text.x = element_text(angle = 45, hjust = 1)#,
#panel.border = element_rect(color = "grey", fill =  NA, size = 0.5)
)
ggsave("./images/results_agg_all_langs.pdf", device = "pdf", width = 3.5, height = 4.8)
# Merge the dataframes
dll_xlang_surp_df %>%
rename(target = comp) %>%
mutate(sig = case_when( ptest_pval >= 0.05 ~ " ",
ptest_pval < 0.05 & ptest_pval >= 0.01  ~ "*",
ptest_pval < 0.01 & ptest_pval >= 0.001  ~ "**",
ptest_pval < 0.001  ~ "***")) %>%
mutate(psychometric = case_when(psychometric == "firstfix_rt" ~ "First Fixation",
psychometric == "gaze_rt" ~ "Gaze Duration",
psychometric == "total_rt" ~ "Total Fixation")) %>%
mutate(model = case_when(model == "mgpt_lc" ~ "mGPT",
model == "monot_all" ~ "monoT")) %>%
mutate(model = factor(model, levels = c("mGPT", "monoT"))) %>%
mutate(target = factor(target, levels = c("freq", "surp", "pmi", "osurp", "surp+freq", "pmi+freq", "osurp+freq"), labels = c("frequency", "surprisal", "pmi", "orthogonalized\nsurprisal/pmi", "surprisal & freq", "pmi & freq", "orthogonalized\nsurprisal/pmi & freq"))) %>%
ggplot(aes(x = target, y = mean, color = lang)) +
#scale_x_discrete(labels =c("freq", "surp", "pmi", "orthogonalized\nsurp/pmi", "surp+freq", "pmi+freq", "orthogonalized\nsurp/pmi+freq")) +
geom_hline(yintercept=0, color="black", linetype="dashed", alpha =0.5) +
#geom_point(position = position_dodge(width = 0.1), size = 2) +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.1, position = position_dodge(width = 0.8 ), alpha=0.5) +
geom_label(aes(label=lang, group=lang), size=2.5, position = position_dodge(width = 0.8), label.padding=unit(0.5, "mm")) +
#geom_text_repel(aes(label=lang, group=target), size=3, label.padding=unit(0.7, "mm"), min.segment.length = unit(0, 'lines')) +
#geom_text(aes(y = 0.08, label = sig), size = 3, show.legend = FALSE) +
ylab("Delta Log Liklihood \n (average  per word)") +
xlab("") +
facet_grid(.~target, scales="free", space = "free") +
labs(color = "") +
guides(color=guide_legend(ncol=2)) +
#scale_x_discrete(labels = c(bquote(w[t-2]), bquote(w[t-1]), bquote(w[t]))) +
#scale_color_manual(values = c("#a1dab4", "#41b6c4", "#225ea8")) +
#ggtitle("Contribution of Surprisal to ΔLL") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(family="serif"),
legend.position = "none",
axis.title.x = element_blank(),
panel.spacing = unit(0.1, "lines"),
axis.text.x = element_text(angle = 45, hjust = 1)#,
#panel.border = element_rect(color = "grey", fill =  NA, size = 0.5)
)
ggsave("./images/results_agg_all_langs.pdf", device = "pdf", width = 3.5, height = 4.8)
# Merge the dataframes
dll_xlang_surp_df %>%
rename(target = comp) %>%
mutate(sig = case_when( ptest_pval >= 0.05 ~ " ",
ptest_pval < 0.05 & ptest_pval >= 0.01  ~ "*",
ptest_pval < 0.01 & ptest_pval >= 0.001  ~ "**",
ptest_pval < 0.001  ~ "***")) %>%
mutate(psychometric = case_when(psychometric == "firstfix_rt" ~ "First Fixation",
psychometric == "gaze_rt" ~ "Gaze Duration",
psychometric == "total_rt" ~ "Total Fixation")) %>%
mutate(model = case_when(model == "mgpt_lc" ~ "mGPT",
model == "monot_all" ~ "monoT")) %>%
mutate(model = factor(model, levels = c("mGPT", "monoT"))) %>%
mutate(target = factor(target, levels = c("freq", "surp", "pmi", "osurp", "surp+freq", "pmi+freq", "osurp+freq"), labels = c("frequency", "surprisal", "pmi", "orthogonalized\nsurprisal/pmi", "surprisal & freq", "pmi & freq", "orthogonalized\nsurprisal/pmi & freq"))) %>%
ggplot(aes(x = target, y = mean, color = lang)) +
#scale_x_discrete(labels =c("freq", "surp", "pmi", "orthogonalized\nsurp/pmi", "surp+freq", "pmi+freq", "orthogonalized\nsurp/pmi+freq")) +
geom_hline(yintercept=0, color="black", linetype="dashed", alpha =0.5) +
#geom_point(position = position_dodge(width = 0.1), size = 2) +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.1, position = position_dodge(width = 0.8 ), alpha=0.3) +
geom_label(aes(label=lang, group=lang), size=2.5, position = position_dodge(width = 0.8), label.padding=unit(0.5, "mm")) +
#geom_text_repel(aes(label=lang, group=target), size=3, label.padding=unit(0.7, "mm"), min.segment.length = unit(0, 'lines')) +
#geom_text(aes(y = 0.08, label = sig), size = 3, show.legend = FALSE) +
ylab("Delta Log Liklihood \n (average  per word)") +
xlab("") +
facet_grid(.~target, scales="free", space = "free") +
labs(color = "") +
guides(color=guide_legend(ncol=2)) +
#scale_x_discrete(labels = c(bquote(w[t-2]), bquote(w[t-1]), bquote(w[t]))) +
#scale_color_manual(values = c("#a1dab4", "#41b6c4", "#225ea8")) +
#ggtitle("Contribution of Surprisal to ΔLL") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(family="serif"),
legend.position = "none",
axis.title.x = element_blank(),
panel.spacing = unit(0.1, "lines"),
axis.text.x = element_text(angle = 45, hjust = 1)#,
#panel.border = element_rect(color = "grey", fill =  NA, size = 0.5)
)
ggsave("./images/results_agg_all_langs.pdf", device = "pdf", width = 3.5, height = 4.8)
coeff_plotting_df %>%
mutate(lang = factor(lang, levels = c("du", "en", "fi", "ge", "gr", "he", "it", "ko", "ru", "sp", "tr"),
labels = c("Dutch\n(DU)", "English\n(EN)", "Finnish\n(FI)", "German\n(GE)", "Greek\n(GR)", "Hebrew\n(HE)", "Italian\n(IT)", "Korean\n(KO)", "Russian\n(RU)",
"Spanish\n(SP)", "Turkish\n(TR)"))) %>%
filter(position == "w t") %>%
ggplot(aes(x = position, y = m, fill = predictor)) +
geom_bar(stat="identity", position = position_dodge(width = 0.9), alpha=0.5) +
geom_errorbar(aes(ymin=lower, ymax=upper), position = position_dodge(width = 0.9), width = 0.1) +
geom_hline(yintercept = 0, color = "black") +
ylab("Coefficient Estimate (ms/bit)") +
facet_grid(cols = vars(lang), scales = "free_y") +
scale_x_discrete(labels = c(bquote(w[t]), bquote(w[t-1]))) +
#scale_color_manual(values = c("#225ea8", "#41b6c4", "#a1dab4")) +
guides(fill=guide_legend(ncol=2)) +
theme(
text = element_text(family = "serif"),
axis.title.x = element_blank(),
legend.position = "bottom",
panel.spacing = unit(0.1, "lines")
)
ggsave("./images/orthogonalized_comparison_coeffs_wt.pdf", width = 5.5, height = 4)
#if (toggle_surp) {
#  ggsave("./images/surprisal_coeffs.pdf", width = 10, height = 5)
#} else {
#  ggsave("./images/pmi_coeffs.pdf", width = 10, height = 5)
#}
coeff_plotting_df %>%
mutate(lang = factor(lang, levels = c("du", "en", "fi", "ge", "gr", "he", "it", "ko", "ru", "sp", "tr"),
labels = c("Dutch\n(DU)", "English\n(EN)", "Finnish\n(FI)", "German\n(GE)", "Greek\n(GR)", "Hebrew\n(HE)", "Italian\n(IT)", "Korean\n(KO)", "Russian\n(RU)",
"Spanish\n(SP)", "Turkish\n(TR)"))) %>%
filter(position == "w t") %>%
ggplot(aes(x = position, y = m, fill = predictor)) +
geom_bar(stat="identity", position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin=lower, ymax=upper), position = position_dodge(width = 0.9), width = 0.1) +
geom_hline(yintercept = 0, color = "black") +
ylab("Coefficient Estimate (ms/bit)") +
facet_grid(cols = vars(lang), scales = "free_y") +
scale_x_discrete(labels = c(bquote(w[t]), bquote(w[t-1]))) +
scale_fill_brewer(palette = "Set1") +
#scale_color_manual(values = c("#225ea8", "#41b6c4", "#a1dab4")) +
guides(fill=guide_legend(ncol=2)) +
theme(
text = element_text(family = "serif"),
axis.title.x = element_blank(),
legend.position = "bottom",
panel.spacing = unit(0.1, "lines")
)
ggsave("./images/orthogonalized_comparison_coeffs_wt.pdf", width = 5.5, height = 4)
#if (toggle_surp) {
#  ggsave("./images/surprisal_coeffs.pdf", width = 10, height = 5)
#} else {
#  ggsave("./images/pmi_coeffs.pdf", width = 10, height = 5)
#}
coeff_plotting_df %>%
mutate(lang = factor(lang, levels = c("du", "en", "fi", "ge", "gr", "he", "it", "ko", "ru", "sp", "tr"),
labels = c("Dutch\n(DU)", "English\n(EN)", "Finnish\n(FI)", "German\n(GE)", "Greek\n(GR)", "Hebrew\n(HE)", "Italian\n(IT)", "Korean\n(KO)", "Russian\n(RU)",
"Spanish\n(SP)", "Turkish\n(TR)"))) %>%
filter(position == "w t") %>%
ggplot(aes(x = position, y = m, fill = predictor)) +
geom_bar(stat="identity", position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin=lower, ymax=upper), position = position_dodge(width = 0.9), width = 0.1) +
geom_hline(yintercept = 0, color = "black") +
ylab("Coefficient Estimate (ms/bit)") +
facet_grid(cols = vars(lang), scales = "free_y") +
scale_x_discrete(labels = c(bquote(w[t]), bquote(w[t-1]))) +
scale_fill_brewer(palette = "Pastel1") +
#scale_color_manual(values = c("#225ea8", "#41b6c4", "#a1dab4")) +
guides(fill=guide_legend(ncol=2)) +
theme(
text = element_text(family = "serif"),
axis.title.x = element_blank(),
legend.position = "bottom",
panel.spacing = unit(0.1, "lines")
)
ggsave("./images/orthogonalized_comparison_coeffs_wt.pdf", width = 5.5, height = 4)
#if (toggle_surp) {
#  ggsave("./images/surprisal_coeffs.pdf", width = 10, height = 5)
#} else {
#  ggsave("./images/pmi_coeffs.pdf", width = 10, height = 5)
#}
coeff_plotting_df %>%
mutate(lang = factor(lang, levels = c("du", "en", "fi", "ge", "gr", "he", "it", "ko", "ru", "sp", "tr"),
labels = c("Dutch\n(DU)", "English\n(EN)", "Finnish\n(FI)", "German\n(GE)", "Greek\n(GR)", "Hebrew\n(HE)", "Italian\n(IT)", "Korean\n(KO)", "Russian\n(RU)",
"Spanish\n(SP)", "Turkish\n(TR)"))) %>%
filter(position == "w t") %>%
ggplot(aes(x = position, y = m, fill = predictor)) +
geom_bar(stat="identity", position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin=lower, ymax=upper), position = position_dodge(width = 0.9), width = 0.1) +
geom_hline(yintercept = 0, color = "black") +
ylab("Coefficient Estimate (ms/bit)") +
facet_grid(cols = vars(lang), scales = "free_y") +
scale_x_discrete(labels = c(bquote(w[t]), bquote(w[t-1]))) +
scale_fill_brewer(palette = "Set2") +
#scale_color_manual(values = c("#225ea8", "#41b6c4", "#a1dab4")) +
guides(fill=guide_legend(ncol=2)) +
theme(
text = element_text(family = "serif"),
axis.title.x = element_blank(),
legend.position = "bottom",
panel.spacing = unit(0.1, "lines")
)
ggsave("./images/orthogonalized_comparison_coeffs_wt.pdf", width = 5.5, height = 4)
#if (toggle_surp) {
#  ggsave("./images/surprisal_coeffs.pdf", width = 10, height = 5)
#} else {
#  ggsave("./images/pmi_coeffs.pdf", width = 10, height = 5)
#}
# Merge the dataframes
dll_xlang_surp_df %>%
rename(target = comp) %>%
mutate(sig = case_when( ptest_pval >= 0.05 ~ " ",
ptest_pval < 0.05 & ptest_pval >= 0.01  ~ "*",
ptest_pval < 0.01 & ptest_pval >= 0.001  ~ "**",
ptest_pval < 0.001  ~ "***")) %>%
mutate(psychometric = case_when(psychometric == "firstfix_rt" ~ "First Fixation",
psychometric == "gaze_rt" ~ "Gaze Duration",
psychometric == "total_rt" ~ "Total Fixation")) %>%
mutate(model = case_when(model == "mgpt_lc" ~ "mGPT",
model == "monot_all" ~ "monoT")) %>%
mutate(model = factor(model, levels = c("mGPT", "monoT"))) %>%
mutate(target = factor(target, levels = c("freq", "surp", "pmi", "osurp", "surp+freq", "pmi+freq", "osurp+freq"), labels = c("Freq.", "Surp.", "PMI", "Orthog.\nSurprisal/PMI", "Surp. & Freq.", "PMI & Freq.", "Orthog.\nSurp./PMI & Freq."))) %>%
ggplot(aes(x = target, y = mean, color = lang)) +
#scale_x_discrete(labels =c("freq", "surp", "pmi", "orthogonalized\nsurp/pmi", "surp+freq", "pmi+freq", "orthogonalized\nsurp/pmi+freq")) +
geom_hline(yintercept=0, color="black", linetype="dashed", alpha =0.5) +
#geom_point(position = position_dodge(width = 0.1), size = 2) +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.1, position = position_dodge(width = 0.8 ), alpha=0.3) +
geom_label(aes(label=lang, group=lang), size=2.5, position = position_dodge(width = 0.8), label.padding=unit(0.5, "mm")) +
#geom_text_repel(aes(label=lang, group=target), size=3, label.padding=unit(0.7, "mm"), min.segment.length = unit(0, 'lines')) +
#geom_text(aes(y = 0.08, label = sig), size = 3, show.legend = FALSE) +
ylab("Delta Log Liklihood \n (average  per word)") +
xlab("") +
facet_grid(.~target, scales="free", space = "free") +
labs(color = "") +
guides(color=guide_legend(ncol=2)) +
#scale_x_discrete(labels = c(bquote(w[t-2]), bquote(w[t-1]), bquote(w[t]))) +
#scale_color_manual(values = c("#a1dab4", "#41b6c4", "#225ea8")) +
#ggtitle("Contribution of Surprisal to ΔLL") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(family="serif"),
legend.position = "none",
axis.title.x = element_blank(),
panel.spacing = unit(0.1, "lines"),
axis.text.x = element_text(angle = 45, hjust = 1)#,
#panel.border = element_rect(color = "grey", fill =  NA, size = 0.5)
)
ggsave("./images/results_agg_all_langs.pdf", device = "pdf", width = 3.5, height = 4.8)
# Merge the dataframes
dll_xlang_surp_df %>%
rename(target = comp) %>%
mutate(sig = case_when( ptest_pval >= 0.05 ~ " ",
ptest_pval < 0.05 & ptest_pval >= 0.01  ~ "*",
ptest_pval < 0.01 & ptest_pval >= 0.001  ~ "**",
ptest_pval < 0.001  ~ "***")) %>%
mutate(psychometric = case_when(psychometric == "firstfix_rt" ~ "First Fixation",
psychometric == "gaze_rt" ~ "Gaze Duration",
psychometric == "total_rt" ~ "Total Fixation")) %>%
mutate(model = case_when(model == "mgpt_lc" ~ "mGPT",
model == "monot_all" ~ "monoT")) %>%
mutate(model = factor(model, levels = c("mGPT", "monoT"))) %>%
mutate(target = factor(target, levels = c("freq", "surp", "pmi", "osurp", "surp+freq", "pmi+freq", "osurp+freq"), labels = c("Frequency", "Surprisal", "PMI", "Orthogonalized\nSurprisal/PMI", "Surprisal & Frequency", "PMI & Frequency", "Orthogonalized\nSurprisal/PMI & Frequency"))) %>%
ggplot(aes(x = target, y = mean, color = lang)) +
#scale_x_discrete(labels =c("freq", "surp", "pmi", "orthogonalized\nsurp/pmi", "surp+freq", "pmi+freq", "orthogonalized\nsurp/pmi+freq")) +
geom_hline(yintercept=0, color="black", linetype="dashed", alpha =0.5) +
#geom_point(position = position_dodge(width = 0.1), size = 2) +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.1, position = position_dodge(width = 0.8 ), alpha=0.3) +
geom_label(aes(label=lang, group=lang), size=2.5, position = position_dodge(width = 0.8), label.padding=unit(0.5, "mm")) +
#geom_text_repel(aes(label=lang, group=target), size=3, label.padding=unit(0.7, "mm"), min.segment.length = unit(0, 'lines')) +
#geom_text(aes(y = 0.08, label = sig), size = 3, show.legend = FALSE) +
ylab("Delta Log Liklihood \n (average  per word)") +
xlab("") +
facet_grid(.~target, scales="free", space = "free") +
labs(color = "") +
guides(color=guide_legend(ncol=2)) +
#scale_x_discrete(labels = c(bquote(w[t-2]), bquote(w[t-1]), bquote(w[t]))) +
#scale_color_manual(values = c("#a1dab4", "#41b6c4", "#225ea8")) +
#ggtitle("Contribution of Surprisal to ΔLL") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(family="serif"),
legend.position = "none",
axis.title.x = element_blank(),
panel.spacing = unit(0.1, "lines"),
axis.text.x = element_text(angle = 45, hjust = 1)#,
#panel.border = element_rect(color = "grey", fill =  NA, size = 0.5)
)
ggsave("./images/results_agg_all_langs.pdf", device = "pdf", width = 3.5, height = 4.8)
# Merge the dataframes
dll_xlang_surp_df %>%
rename(target = comp) %>%
mutate(sig = case_when( ptest_pval >= 0.05 ~ " ",
ptest_pval < 0.05 & ptest_pval >= 0.01  ~ "*",
ptest_pval < 0.01 & ptest_pval >= 0.001  ~ "**",
ptest_pval < 0.001  ~ "***")) %>%
mutate(psychometric = case_when(psychometric == "firstfix_rt" ~ "First Fixation",
psychometric == "gaze_rt" ~ "Gaze Duration",
psychometric == "total_rt" ~ "Total Fixation")) %>%
mutate(model = case_when(model == "mgpt_lc" ~ "mGPT",
model == "monot_all" ~ "monoT")) %>%
mutate(model = factor(model, levels = c("mGPT", "monoT"))) %>%
mutate(target = factor(target, levels = c("freq", "surp", "pmi", "osurp", "surp+freq", "pmi+freq", "osurp+freq"), labels = c("Frequency", "Surprisal", "PMI", "Orthogonalized\nSurprisal/PMI", "Surprisal & Frequency", "PMI & Frequency", "Orthogonalized\nSurp./PMI & Freq."))) %>%
ggplot(aes(x = target, y = mean, color = lang)) +
#scale_x_discrete(labels =c("freq", "surp", "pmi", "orthogonalized\nsurp/pmi", "surp+freq", "pmi+freq", "orthogonalized\nsurp/pmi+freq")) +
geom_hline(yintercept=0, color="black", linetype="dashed", alpha =0.5) +
#geom_point(position = position_dodge(width = 0.1), size = 2) +
geom_errorbar(aes(ymin=lower, ymax=upper), width = 0.1, position = position_dodge(width = 0.8 ), alpha=0.3) +
geom_label(aes(label=lang, group=lang), size=2.5, position = position_dodge(width = 0.8), label.padding=unit(0.5, "mm")) +
#geom_text_repel(aes(label=lang, group=target), size=3, label.padding=unit(0.7, "mm"), min.segment.length = unit(0, 'lines')) +
#geom_text(aes(y = 0.08, label = sig), size = 3, show.legend = FALSE) +
ylab("Delta Log Liklihood \n (average  per word)") +
xlab("") +
facet_grid(.~target, scales="free", space = "free") +
labs(color = "") +
guides(color=guide_legend(ncol=2)) +
#scale_x_discrete(labels = c(bquote(w[t-2]), bquote(w[t-1]), bquote(w[t]))) +
#scale_color_manual(values = c("#a1dab4", "#41b6c4", "#225ea8")) +
#ggtitle("Contribution of Surprisal to ΔLL") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank(),
text = element_text(family="serif"),
legend.position = "none",
axis.title.x = element_blank(),
panel.spacing = unit(0.1, "lines"),
axis.text.x = element_text(angle = 45, hjust = 1)#,
#panel.border = element_rect(color = "grey", fill =  NA, size = 0.5)
)
ggsave("./images/results_agg_all_langs.pdf", device = "pdf", width = 3.5, height = 4.8)
dll_freq = dll_raw_df %>% filter(names == "freq")
dll_osurp = dll_raw_df %>% filter(names == "osurp+freq")
dll_surp_freq = dll_raw_df %>% filter(names == "surp+freq")
dll_comp = dll_freq$logliks - dll_surp_freq$logliks
perm.test(dll_surp_freq$logliks, dll_osurp$logliks, num.sim=2000)
#table(dll_raw_df$names)
dll_freq = dll_raw_df %>% filter(names == "freq")
dll_osurp = dll_raw_df %>% filter(names == "osurp+freq")
dll_surp_freq = dll_raw_df %>% filter(names == "surp+freq")
dll_comp = dll_surp_freq$logliks - dll_surp_freq$logliks
perm.test(dll_comp, num.sim=2000)
dll_comp
dll_freq = dll_raw_df %>% filter(names == "freq")
dll_osurp = dll_raw_df %>% filter(names == "osurp+freq")
dll_surp_freq = dll_raw_df %>% filter(names == "surp+freq")
dll_comp = dll_surp_freq$logliks - dll_osurp$logliks
perm.test(dll_comp, num.sim=2000)
dll_freq = dll_raw_df %>% filter(names == "freq")
dll_osurp = dll_raw_df %>% filter(names == "osurp+freq")
dll_surp_freq = dll_raw_df %>% filter(names == "surp+freq")
dll_pmi_freq = dll_raw_df %>% filter(names == "pmi+freq")
perm.test(dll_surp_freq$logliks, dll_osurp$logliks, num.sim=2000)
#table(dll_raw_df$names)
dll_freq = dll_raw_df %>% filter(names == "freq")
dll_osurp = dll_raw_df %>% filter(names == "osurp+freq")
dll_surp_freq = dll_raw_df %>% filter(names == "surp+freq")
dll_pmi_freq = dll_raw_df %>% filter(names == "pmi+freq")
print("Comparing surp+freq // osurp+freq")
perm.test(dll_surp_freq$logliks, dll_osurp$logliks, num.sim=2000)
print("Comparing surp+freq // pmi+freq")
perm.test(dll_surp_freq$logliks, dll_pmi_freq$logliks, num.sim=2000)
print("Comparing osurp+freq // pmi+freq")
perm.test(dll_osurp$logliks, dll_pmi_freq$logliks, num.sim=2000)
#table(dll_raw_df$names)
